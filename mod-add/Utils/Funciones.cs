using mod_add.Datos.Enums;
using mod_add.Datos.Implementaciones;
using mod_add.Datos.Infraestructura;
using mod_add.Datos.Interfaces;
using mod_add.Datos.Modelos;
using SR.Datos;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization.Formatters.Binary;

namespace mod_add.Utils
{
    public static class Funciones
    {
        public static bool ValidarMesBusqueda(List<DateTime> MesesValidos, DateTime fecha)
        {
            return MesesValidos.Any(x => x.Year == fecha.Year && x.Month == fecha.Month);
        }

        public static List<T> CloneList<T>(List<T> oldList)
        {
            BinaryFormatter formatter = new BinaryFormatter();
            MemoryStream stream = new MemoryStream();
            formatter.Serialize(stream, oldList);
            stream.Position = 0;
            return (List<T>)formatter.Deserialize(stream);
        }

        public static string Mayusculas(string texto)
        {
            return texto.ToUpper();
        }


        public static void RegistrarModificacion(BitacoraModificacion bitacora)
        {
            DatabaseFactory dbf = new DatabaseFactory();
            IBitacoraServicio bitacoraServicio = new BitacoraServicio(dbf);

            bitacoraServicio.Create(bitacora);
        }

        public static Cheque ParseCheque(SR_cheques modelo, TipoAccion tipoAccion = TipoAccion.NINGUNO, TipoPago tipoPago = TipoPago.NINGUNO)
        {
            return new Cheque
            {
                TipoAccion = tipoAccion,
                TipoPago = tipoPago,
                TotalArticulosEliminados = 0,
                FolioAnt = modelo.folio,
                NumChequeAnt = modelo.numcheque,
                FolioNotaConsumoAnt = modelo.folionotadeconsumo,
                PropinaAnt = modelo.propina,
                PropinaTarjetaAnt = modelo.propinatarjeta,
                TotalArticulosAnt = modelo.totalarticulos,
                SubtotalAnt = modelo.subtotal,
                TotalAnt = modelo.total,
                TotalConPropinaAnt = modelo.totalconpropina,
                TotalConCargoAnt = modelo.totalconcargo,
                TotalConPropinaCargoAnt = modelo.totalconpropinacargo,
                DescuentoImporteAnt = modelo.descuentoimporte,
                EfectivoAnt = modelo.efectivo,
                TarjetaAnt = modelo.tarjeta,
                ValesAnt = modelo.vales,
                OtrosAnt = modelo.otros,
                TotalSinDescuentoAnt = modelo.totalsindescuento,
                TotalAlimentosAnt = modelo.totalalimentos,
                TotalBebidasAnt = modelo.totalbebidas,
                TotalOtrosAnt = modelo.totalotros,
                TotalDescuentosAnt = modelo.totaldescuentos,
                TotalDescuentoAlimentosAnt = modelo.totaldescuentoalimentos,
                TotalDescuentoBebidasAnt = modelo.totaldescuentobebidas,
                TotalDescuentoOtrosAnt = modelo.totaldescuentootros,
                TotalDescuentoYCortesiaAnt = modelo.totaldescuentoycortesia,
                TotalAlimentosSinDescuentosAnt = modelo.totalalimentossindescuentos,
                TotalBebidasSinDescuentosAnt = modelo.totalbebidassindescuentos,
                TotalOtrosSinDescuentosAnt = modelo.totalotrossindescuentos,
                SubtotalConDescuentoAnt = modelo.subtotalcondescuento,
                TotalImpuestoD1Ant = modelo.totalimpuestod1,
                TotalImpuestoD2Ant = modelo.totalimpuestod2,
                TotalImpuestoD3Ant = modelo.totalimpuestod3,
                TotalImpuesto1Ant = modelo.totalimpuesto1,
                Desc_Imp_OriginalAnt = modelo.desc_imp_original,
                CambioAnt = modelo.cambio,
                CambioRepartidorAnt = modelo.cambiorepartidor,
                IdTurnoAnt = modelo.idturno,

                folio = modelo.folio,
                seriefolio = modelo.seriefolio,
                numcheque = modelo.numcheque,
                fecha = modelo.fecha,
                salidarepartidor = modelo.salidarepartidor,
                arriborepartidor = modelo.arriborepartidor,
                cierre = modelo.cierre,
                mesa = modelo.mesa,
                nopersonas = modelo.nopersonas,
                idmesero = modelo.idmesero,
                pagado = modelo.pagado,
                cancelado = modelo.cancelado,
                impreso = modelo.impreso,
                impresiones = modelo.impresiones,
                cambio = modelo.cambio,
                descuento = modelo.descuento,
                reabiertas = modelo.reabiertas,
                razoncancelado = modelo.razoncancelado,
                orden = modelo.orden,
                facturado = modelo.facturado,
                idcliente = modelo.idcliente,
                idarearestaurant = modelo.idarearestaurant,
                idempresa = modelo.idempresa,
                tipodeservicio = modelo.tipodeservicio,
                idturno = modelo.idturno,
                usuariocancelo = modelo.usuariocancelo,
                comentariodescuento = modelo.comentariodescuento,
                estacion = modelo.estacion,
                cambiorepartidor = modelo.cambiorepartidor,
                usuariodescuento = modelo.usuariodescuento,
                fechacancelado = modelo.fechacancelado,
                idtipodescuento = modelo.idtipodescuento,
                numerotarjeta = modelo.numerotarjeta,
                folionotadeconsumo = modelo.folionotadeconsumo,
                notadeconsumo = modelo.notadeconsumo,
                propinapagada = modelo.propinapagada,
                propinafoliomovtocaja = modelo.propinafoliomovtocaja,
                puntosmonederogenerados = modelo.puntosmonederogenerados,
                propinaincluida = modelo.propinaincluida,
                tarjetadescuento = modelo.tarjetadescuento,
                porcentajefac = modelo.porcentajefac,
                usuariopago = modelo.usuariopago,
                propinamanual = modelo.propinamanual,
                observaciones = modelo.observaciones,
                idclientedomicilio = modelo.idclientedomicilio,
                iddireccion = modelo.iddireccion,
                idclientefacturacion = modelo.idclientefacturacion,
                telefonousadodomicilio = modelo.telefonousadodomicilio,
                totalarticulos = modelo.totalarticulos,
                subtotal = modelo.subtotal,
                subtotalsinimpuestos = modelo.subtotalsinimpuestos,
                total = modelo.total,
                totalconpropina = modelo.totalconpropina,
                //totalsinimpuestos = modelo.totalsinimpuestos,
                //totalsindescuentosinimpuesto = modelo.totalsindescuentosinimpuesto,
                totalimpuesto1 = modelo.totalimpuesto1,
                //totalalimentosconimpuestos = modelo.totalalimentosconimpuestos,
                //totalbebidasconimpuestos = modelo.totalbebidasconimpuestos,
                //totalotrosconimpuestos = modelo.totalotrosconimpuestos,
                //totalalimentossinimpuestos = modelo.totalalimentossinimpuestos,
                //totalbebidassinimpuestos = modelo.totalbebidassinimpuestos,
                //totalotrossinimpuestos = modelo.totalotrossinimpuestos,
                //totaldescuentossinimpuestos = modelo.totaldescuentossinimpuestos,
                //totaldescuentosconimpuestos = modelo.totaldescuentosconimpuestos,
                //totaldescuentoalimentosconimpuesto = modelo.totaldescuentoalimentosconimpuesto,
                //totaldescuentobebidasconimpuesto = modelo.totaldescuentobebidasconimpuesto,
                //totaldescuentootrosconimpuesto = modelo.totaldescuentootrosconimpuesto,
                //totaldescuentoalimentossinimpuesto = modelo.totaldescuentoalimentossinimpuesto,
                //totaldescuentobebidassinimpuesto = modelo.totaldescuentobebidassinimpuesto,
                //totaldescuentootrossinimpuesto = modelo.totaldescuentootrossinimpuesto,
                //totalcortesiassinimpuestos = modelo.totalcortesiassinimpuestos,
                //totalcortesiasconimpuestos = modelo.totalcortesiasconimpuestos,
                //totalcortesiaalimentosconimpuesto = modelo.totalcortesiaalimentosconimpuesto,
                //totalcortesiabebidasconimpuesto = modelo.totalcortesiabebidasconimpuesto,
                //totalcortesiaotrosconimpuesto = modelo.totalcortesiaotrosconimpuesto,
                //totalcortesiaalimentossinimpuesto = modelo.totalcortesiaalimentossinimpuesto,
                //totalcortesiabebidassinimpuesto = modelo.totalcortesiabebidassinimpuesto,
                //totalcortesiaotrossinimpuesto = modelo.totalcortesiaotrossinimpuesto,
                //totaldescuentoycortesiasinimpuesto = modelo.totaldescuentoycortesiasinimpuesto,
                //totaldescuentoycortesiaconimpuesto = modelo.totaldescuentoycortesiaconimpuesto,
                cargo = modelo.cargo,
                totalconcargo = modelo.totalconcargo,
                totalconpropinacargo = modelo.totalconpropinacargo,
                descuentoimporte = modelo.descuentoimporte,
                efectivo = modelo.efectivo,
                tarjeta = modelo.tarjeta,
                vales = modelo.vales,
                otros = modelo.otros,
                propina = modelo.propina,
                propinatarjeta = modelo.propinatarjeta,
                //totalalimentossinimpuestossindescuentos = modelo.totalalimentossinimpuestossindescuentos,
                //totalbebidassinimpuestossindescuentos = modelo.totalbebidassinimpuestossindescuentos,
                //totalotrossinimpuestossindescuentos = modelo.totalotrossinimpuestossindescuentos,
                campoadicional1 = modelo.campoadicional1,
                idreservacion = modelo.idreservacion,
                idcomisionista = modelo.idcomisionista,
                importecomision = modelo.importecomision,
                comisionpagada = modelo.comisionpagada,
                fechapagocomision = modelo.fechapagocomision,
                foliopagocomision = modelo.foliopagocomision,
                tipoventarapida = modelo.tipoventarapida,
                callcenter = modelo.callcenter,
                idordencompra = modelo.idordencompra,
                totalsindescuento = modelo.totalsindescuento,
                totalalimentos = modelo.totalalimentos,
                totalbebidas = modelo.totalbebidas,
                totalotros = modelo.totalotros,
                totaldescuentos = modelo.totaldescuentos,
                totaldescuentoalimentos = modelo.totaldescuentoalimentos,
                totaldescuentobebidas = modelo.totaldescuentobebidas,
                totaldescuentootros = modelo.totaldescuentootros,
                totalcortesias = modelo.totalcortesias,
                totalcortesiaalimentos = modelo.totalcortesiaalimentos,
                totalcortesiabebidas = modelo.totalcortesiabebidas,
                totalcortesiaotros = modelo.totalcortesiaotros,
                totaldescuentoycortesia = modelo.totaldescuentoycortesia,
                totalalimentossindescuentos = modelo.totalalimentossindescuentos,
                totalbebidassindescuentos = modelo.totalbebidassindescuentos,
                totalotrossindescuentos = modelo.totalotrossindescuentos,
                descuentocriterio = modelo.descuentocriterio,
                descuentomonedero = modelo.descuentomonedero,
                idmenucomedor = modelo.idmenucomedor,
                subtotalcondescuento = modelo.subtotalcondescuento,
                comisionpax = modelo.comisionpax,
                procesadointerfaz = modelo.procesadointerfaz,
                domicilioprogramado = modelo.domicilioprogramado,
                fechadomicilioprogramado = modelo.fechadomicilioprogramado,
                enviado = modelo.enviado,
                ncf = modelo.ncf,
                numerocuenta = modelo.numerocuenta,
                codigo_unico_af = modelo.codigo_unico_af,
                estatushub = modelo.estatushub,
                idfoliohub = modelo.idfoliohub,
                EnviadoRW = modelo.EnviadoRW,
                usuarioapertura = modelo.usuarioapertura,
                titulartarjetamonedero = modelo.titulartarjetamonedero,
                saldoanteriormonedero = modelo.saldoanteriormonedero,
                autorizacionfolio = modelo.autorizacionfolio,
                fechalimiteemision = modelo.fechalimiteemision,
                totalimpuestod1 = modelo.totalimpuestod1,
                totalimpuestod2 = modelo.totalimpuestod2,
                totalimpuestod3 = modelo.totalimpuestod3,
                idmotivocancela = modelo.idmotivocancela,
                sistema_envio = modelo.sistema_envio,
                idformadepagoDescuento = modelo.idformadepagoDescuento,
                titulartarjetamonederodescuento = modelo.titulartarjetamonederodescuento,
                foliotempcheques = modelo.foliotempcheques,
                c_iddispositivo = modelo.c_iddispositivo,
                surveycode = modelo.surveycode,
                salerestaurantid = modelo.salerestaurantid,
                timemarktoconfirmed = modelo.timemarktoconfirmed,
                timemarktodelivery = modelo.timemarktodelivery,
                timemarktodeliveryarrive = modelo.timemarktodeliveryarrive,
                esalestatus = modelo.esalestatus,
                statusSR = modelo.statusSR,
                paymentreference = modelo.paymentreference,
                deliverycharge = modelo.deliverycharge,
                comandaimpresa = modelo.comandaimpresa,
                foodorder = modelo.foodorder,
                cashpaymentwith = modelo.cashpaymentwith,
                intentoEnvioAF = modelo.intentoEnvioAF,
                paymentmethod_id = modelo.paymentmethod_id,
                TKC_Token = modelo.TKC_Token,
                TKC_Transaction = modelo.TKC_Transaction,
                TKC_Authorization = modelo.TKC_Authorization,
                TKC_Cupon = modelo.TKC_Cupon,
                TKC_ExpirationDate = modelo.TKC_ExpirationDate,
                TKC_Recompensa = modelo.TKC_Recompensa,
                campoadicional3 = modelo.campoadicional3,
                estrateca_CardNumber = modelo.estrateca_CardNumber,
                estrateca_VoucherText = modelo.estrateca_VoucherText,
                campoadicional4 = modelo.campoadicional4,
                campoadicional5 = modelo.campoadicional5,
                sacoa_CardNumber = modelo.sacoa_CardNumber,
                sacoa_credits = modelo.sacoa_credits,
                estrateca_TypeDisccount = modelo.estrateca_TypeDisccount,
                estrateca_DiscountCode = modelo.estrateca_DiscountCode,
                estrateca_DiscountID = modelo.estrateca_DiscountID,
                estrateca_DiscountAmount = modelo.estrateca_DiscountAmount,
                desc_imp_original = modelo.desc_imp_original,
                donativo = modelo.donativo,
                totalcondonativo = modelo.totalcondonativo,
                totalconpropinacargodonativo = modelo.totalconpropinacargodonativo,
                orderreference = modelo.orderreference,
                appname = modelo.appname,
                paymentproviderid = modelo.paymentproviderid,
                paymentprovider = modelo.paymentprovider,
                ChangeStatusSRX = modelo.ChangeStatusSRX,
                claveempresav = modelo.claveempresav,
                cuentaenuso = modelo.cuentaenuso,
                modificado = modelo.modificado,
                campoadicional2 = modelo.campoadicional2,
                DateDownload = modelo.DateDownload,
                comandaimpresacancelada = modelo.comandaimpresacancelada,
                empaquetado = modelo.empaquetado,
                status_domicilio = modelo.status_domicilio,
                asignacion = modelo.asignacion,
                enviopagado = modelo.enviopagado,
                diet_restrictions = modelo.diet_restrictions,
                sl_cupon_descuento = modelo.sl_cupon_descuento,
                sl_tipo_cupon = modelo.sl_tipo_cupon,
                sl_importe_descuento = modelo.sl_importe_descuento,
                TUKI_CardNumber = modelo.TUKI_CardNumber,
                TUKI_AccumulatedPoints = modelo.TUKI_AccumulatedPoints,
                TUKI_CurrentPoints = modelo.TUKI_CurrentPoints,
                sl_num_cupones = modelo.sl_num_cupones,
            };
        }

        public static SR_cheques ParseSR_cheques(Cheque modelo)
        {
            return new SR_cheques
            {
                folio = modelo.folio,
                seriefolio = modelo.seriefolio,
                numcheque = modelo.numcheque,
                fecha = modelo.fecha,
                salidarepartidor = modelo.salidarepartidor,
                arriborepartidor = modelo.arriborepartidor,
                cierre = modelo.cierre,
                mesa = modelo.mesa,
                nopersonas = modelo.nopersonas,
                idmesero = modelo.idmesero,
                pagado = modelo.pagado,
                cancelado = modelo.cancelado,
                impreso = modelo.impreso,
                impresiones = modelo.impresiones,
                cambio = modelo.cambio,
                descuento = modelo.descuento,
                reabiertas = modelo.reabiertas,
                razoncancelado = modelo.razoncancelado,
                orden = modelo.orden,
                facturado = modelo.facturado,
                idcliente = modelo.idcliente,
                idarearestaurant = modelo.idarearestaurant,
                idempresa = modelo.idempresa,
                tipodeservicio = modelo.tipodeservicio,
                idturno = modelo.idturno,
                usuariocancelo = modelo.usuariocancelo,
                comentariodescuento = modelo.comentariodescuento,
                estacion = modelo.estacion,
                cambiorepartidor = modelo.cambiorepartidor,
                usuariodescuento = modelo.usuariodescuento,
                fechacancelado = modelo.fechacancelado,
                idtipodescuento = modelo.idtipodescuento,
                numerotarjeta = modelo.numerotarjeta,
                folionotadeconsumo = modelo.folionotadeconsumo,
                notadeconsumo = modelo.notadeconsumo,
                propinapagada = modelo.propinapagada,
                propinafoliomovtocaja = modelo.propinafoliomovtocaja,
                puntosmonederogenerados = modelo.puntosmonederogenerados,
                propinaincluida = modelo.propinaincluida,
                tarjetadescuento = modelo.tarjetadescuento,
                porcentajefac = modelo.porcentajefac,
                usuariopago = modelo.usuariopago,
                propinamanual = modelo.propinamanual,
                observaciones = modelo.observaciones,
                idclientedomicilio = modelo.idclientedomicilio,
                iddireccion = modelo.iddireccion,
                idclientefacturacion = modelo.idclientefacturacion,
                telefonousadodomicilio = modelo.telefonousadodomicilio,
                totalarticulos = modelo.totalarticulos,
                subtotal = modelo.subtotal,
                subtotalsinimpuestos = modelo.subtotalsinimpuestos,
                total = modelo.total,
                totalconpropina = modelo.totalconpropina,
                //totalsinimpuestos = modelo.totalsinimpuestos,
                //totalsindescuentosinimpuesto = modelo.totalsindescuentosinimpuesto,
                totalimpuesto1 = modelo.totalimpuesto1,
                //totalalimentosconimpuestos = modelo.totalalimentosconimpuestos,
                //totalbebidasconimpuestos = modelo.totalbebidasconimpuestos,
                //totalotrosconimpuestos = modelo.totalotrosconimpuestos,
                //totalalimentossinimpuestos = modelo.totalalimentossinimpuestos,
                //totalbebidassinimpuestos = modelo.totalbebidassinimpuestos,
                //totalotrossinimpuestos = modelo.totalotrossinimpuestos,
                //totaldescuentossinimpuestos = modelo.totaldescuentossinimpuestos,
                //totaldescuentosconimpuestos = modelo.totaldescuentosconimpuestos,
                //totaldescuentoalimentosconimpuesto = modelo.totaldescuentoalimentosconimpuesto,
                //totaldescuentobebidasconimpuesto = modelo.totaldescuentobebidasconimpuesto,
                //totaldescuentootrosconimpuesto = modelo.totaldescuentootrosconimpuesto,
                //totaldescuentoalimentossinimpuesto = modelo.totaldescuentoalimentossinimpuesto,
                //totaldescuentobebidassinimpuesto = modelo.totaldescuentobebidassinimpuesto,
                //totaldescuentootrossinimpuesto = modelo.totaldescuentootrossinimpuesto,
                //totalcortesiassinimpuestos = modelo.totalcortesiassinimpuestos,
                //totalcortesiasconimpuestos = modelo.totalcortesiasconimpuestos,
                //totalcortesiaalimentosconimpuesto = modelo.totalcortesiaalimentosconimpuesto,
                //totalcortesiabebidasconimpuesto = modelo.totalcortesiabebidasconimpuesto,
                //totalcortesiaotrosconimpuesto = modelo.totalcortesiaotrosconimpuesto,
                //totalcortesiaalimentossinimpuesto = modelo.totalcortesiaalimentossinimpuesto,
                //totalcortesiabebidassinimpuesto = modelo.totalcortesiabebidassinimpuesto,
                //totalcortesiaotrossinimpuesto = modelo.totalcortesiaotrossinimpuesto,
                //totaldescuentoycortesiasinimpuesto = modelo.totaldescuentoycortesiasinimpuesto,
                //totaldescuentoycortesiaconimpuesto = modelo.totaldescuentoycortesiaconimpuesto,
                cargo = modelo.cargo,
                totalconcargo = modelo.totalconcargo,
                totalconpropinacargo = modelo.totalconpropinacargo,
                descuentoimporte = modelo.descuentoimporte,
                efectivo = modelo.efectivo,
                tarjeta = modelo.tarjeta,
                vales = modelo.vales,
                otros = modelo.otros,
                propina = modelo.propina,
                propinatarjeta = modelo.propinatarjeta,
                //totalalimentossinimpuestossindescuentos = modelo.totalalimentossinimpuestossindescuentos,
                //totalbebidassinimpuestossindescuentos = modelo.totalbebidassinimpuestossindescuentos,
                //totalotrossinimpuestossindescuentos = modelo.totalotrossinimpuestossindescuentos,
                campoadicional1 = modelo.campoadicional1,
                idreservacion = modelo.idreservacion,
                idcomisionista = modelo.idcomisionista,
                importecomision = modelo.importecomision,
                comisionpagada = modelo.comisionpagada,
                fechapagocomision = modelo.fechapagocomision,
                foliopagocomision = modelo.foliopagocomision,
                tipoventarapida = modelo.tipoventarapida,
                callcenter = modelo.callcenter,
                idordencompra = modelo.idordencompra,
                totalsindescuento = modelo.totalsindescuento,
                totalalimentos = modelo.totalalimentos,
                totalbebidas = modelo.totalbebidas,
                totalotros = modelo.totalotros,
                totaldescuentos = modelo.totaldescuentos,
                totaldescuentoalimentos = modelo.totaldescuentoalimentos,
                totaldescuentobebidas = modelo.totaldescuentobebidas,
                totaldescuentootros = modelo.totaldescuentootros,
                totalcortesias = modelo.totalcortesias,
                totalcortesiaalimentos = modelo.totalcortesiaalimentos,
                totalcortesiabebidas = modelo.totalcortesiabebidas,
                totalcortesiaotros = modelo.totalcortesiaotros,
                totaldescuentoycortesia = modelo.totaldescuentoycortesia,
                totalalimentossindescuentos = modelo.totalalimentossindescuentos,
                totalbebidassindescuentos = modelo.totalbebidassindescuentos,
                totalotrossindescuentos = modelo.totalotrossindescuentos,
                descuentocriterio = modelo.descuentocriterio,
                descuentomonedero = modelo.descuentomonedero,
                idmenucomedor = modelo.idmenucomedor,
                subtotalcondescuento = modelo.subtotalcondescuento,
                comisionpax = modelo.comisionpax,
                procesadointerfaz = modelo.procesadointerfaz,
                domicilioprogramado = modelo.domicilioprogramado,
                fechadomicilioprogramado = modelo.fechadomicilioprogramado,
                enviado = modelo.enviado,
                ncf = modelo.ncf,
                numerocuenta = modelo.numerocuenta,
                codigo_unico_af = modelo.codigo_unico_af,
                estatushub = modelo.estatushub,
                idfoliohub = modelo.idfoliohub,
                EnviadoRW = modelo.EnviadoRW,
                usuarioapertura = modelo.usuarioapertura,
                titulartarjetamonedero = modelo.titulartarjetamonedero,
                saldoanteriormonedero = modelo.saldoanteriormonedero,
                autorizacionfolio = modelo.autorizacionfolio,
                fechalimiteemision = modelo.fechalimiteemision,
                totalimpuestod1 = modelo.totalimpuestod1,
                totalimpuestod2 = modelo.totalimpuestod2,
                totalimpuestod3 = modelo.totalimpuestod3,
                idmotivocancela = modelo.idmotivocancela,
                sistema_envio = modelo.sistema_envio,
                idformadepagoDescuento = modelo.idformadepagoDescuento,
                titulartarjetamonederodescuento = modelo.titulartarjetamonederodescuento,
                foliotempcheques = modelo.foliotempcheques,
                c_iddispositivo = modelo.c_iddispositivo,
                surveycode = modelo.surveycode,
                salerestaurantid = modelo.salerestaurantid,
                timemarktoconfirmed = modelo.timemarktoconfirmed,
                timemarktodelivery = modelo.timemarktodelivery,
                timemarktodeliveryarrive = modelo.timemarktodeliveryarrive,
                esalestatus = modelo.esalestatus,
                statusSR = modelo.statusSR,
                paymentreference = modelo.paymentreference,
                deliverycharge = modelo.deliverycharge,
                comandaimpresa = modelo.comandaimpresa,
                foodorder = modelo.foodorder,
                cashpaymentwith = modelo.cashpaymentwith,
                intentoEnvioAF = modelo.intentoEnvioAF,
                paymentmethod_id = modelo.paymentmethod_id,
                TKC_Token = modelo.TKC_Token,
                TKC_Transaction = modelo.TKC_Transaction,
                TKC_Authorization = modelo.TKC_Authorization,
                TKC_Cupon = modelo.TKC_Cupon,
                TKC_ExpirationDate = modelo.TKC_ExpirationDate,
                TKC_Recompensa = modelo.TKC_Recompensa,
                campoadicional3 = modelo.campoadicional3,
                estrateca_CardNumber = modelo.estrateca_CardNumber,
                estrateca_VoucherText = modelo.estrateca_VoucherText,
                campoadicional4 = modelo.campoadicional4,
                campoadicional5 = modelo.campoadicional5,
                sacoa_CardNumber = modelo.sacoa_CardNumber,
                sacoa_credits = modelo.sacoa_credits,
                estrateca_TypeDisccount = modelo.estrateca_TypeDisccount,
                estrateca_DiscountCode = modelo.estrateca_DiscountCode,
                estrateca_DiscountID = modelo.estrateca_DiscountID,
                estrateca_DiscountAmount = modelo.estrateca_DiscountAmount,
                desc_imp_original = modelo.desc_imp_original,
                donativo = modelo.donativo,
                totalcondonativo = modelo.totalcondonativo,
                totalconpropinacargodonativo = modelo.totalconpropinacargodonativo,
                orderreference = modelo.orderreference,
                appname = modelo.appname,
                paymentproviderid = modelo.paymentproviderid,
                paymentprovider = modelo.paymentprovider,
                ChangeStatusSRX = modelo.ChangeStatusSRX,
                claveempresav = modelo.claveempresav,
                cuentaenuso = modelo.cuentaenuso,
                modificado = modelo.modificado,
                campoadicional2 = modelo.campoadicional2,
                DateDownload = modelo.DateDownload,
                comandaimpresacancelada = modelo.comandaimpresacancelada,
                empaquetado = modelo.empaquetado,
                status_domicilio = modelo.status_domicilio,
                asignacion = modelo.asignacion,
                enviopagado = modelo.enviopagado,
                diet_restrictions = modelo.diet_restrictions,
                sl_cupon_descuento = modelo.sl_cupon_descuento,
                sl_tipo_cupon = modelo.sl_tipo_cupon,
                sl_importe_descuento = modelo.sl_importe_descuento,
                TUKI_CardNumber = modelo.TUKI_CardNumber,
                TUKI_AccumulatedPoints = modelo.TUKI_AccumulatedPoints,
                TUKI_CurrentPoints = modelo.TUKI_CurrentPoints,
                sl_num_cupones = modelo.sl_num_cupones,
            };
        }

        public static ChequeDetalle ParseChequeDetalle(SR_cheqdet modelo, TipoAccion tipoAccion = TipoAccion.NINGUNO, TipoClasificacion tipoClasificacion = TipoClasificacion.NINGUNO)
        {
            return new ChequeDetalle
            {
                TipoAccion = tipoAccion,
                TipoClasificacion = tipoClasificacion,
                Cambiado = false,
                PrecionEnUnidad = (modelo.cantidad ?? 0) == Math.Truncate(modelo.cantidad ?? 0) ? (modelo.precio ?? 0) : ((modelo.cantidad ?? 0) * (modelo.precio ?? 0)),

                FolioAnt = modelo.foliodet,
                CantidadAnt = modelo.cantidad,
                IdProductoCompuestoAnt = modelo.idproductocompuesto,
                IdProductoAnt = modelo.idproducto,
                PrecioAnt = modelo.precio,
                Impuesto1Ant = modelo.impuesto1,
                Impuesto2Ant = modelo.impuesto2,
                Impuesto3Ant = modelo.impuesto3,
                PrecioSinImpuestosAnt = modelo.preciosinimpuestos,
                PrecioCatalogoAnt = modelo.preciocatalogo,
                //ImpuestoImporte3Ant = modelo.impuestoimporte3.Value,
                ImpuestoImporte3Ant = modelo.impuestoimporte3,

                foliodet = modelo.foliodet,
                movimiento = modelo.movimiento,
                comanda = modelo.comanda,
                cantidad = modelo.cantidad,
                idproducto = modelo.idproducto,
                descuento = modelo.descuento,
                precio = modelo.precio,
                impuesto1 = modelo.impuesto1,
                impuesto2 = modelo.impuesto2,
                impuesto3 = modelo.impuesto3,
                preciosinimpuestos = modelo.preciosinimpuestos,
                tiempo = modelo.tiempo,
                hora = modelo.hora,
                modificador = modelo.modificador,
                mitad = modelo.mitad,
                comentario = modelo.comentario,
                idestacion = modelo.idestacion,
                usuariodescuento = modelo.usuariodescuento,
                comentariodescuento = modelo.comentariodescuento,
                idtipodescuento = modelo.idtipodescuento,
                horaproduccion = modelo.horaproduccion,
                idproductocompuesto = modelo.idproductocompuesto,
                productocompuestoprincipal = modelo.productocompuestoprincipal,
                preciocatalogo = modelo.preciocatalogo,
                marcar = modelo.marcar,
                idmeseroproducto = modelo.idmeseroproducto,
                prioridadproduccion = modelo.prioridadproduccion,
                estatuspatin = modelo.estatuspatin,
                idcortesia = modelo.idcortesia,
                numerotarjeta = modelo.numerotarjeta,
                estadomonitor = modelo.estadomonitor,
                llavemovto = modelo.llavemovto,
                horameserofinalizado = modelo.horameserofinalizado,
                meserofinalizado = modelo.meserofinalizado,
                sistema_envio = modelo.sistema_envio,
                idturno_cierre = modelo.idturno_cierre,
                procesado = modelo.procesado,
                promovolumen = modelo.promovolumen,
                iddispositivo = modelo.iddispositivo,
                productsyncidsr = modelo.productsyncidsr,
                subtotalsrx = modelo.subtotalsrx,
                totalsrx = modelo.totalsrx,
                idlistaprecio = modelo.idlistaprecio,
                tipocambio = modelo.tipocambio,
                idmovtobillar = modelo.idmovtobillar,
                impuestoimporte3 = modelo.impuestoimporte3,
                estrateca_DiscountCode = modelo.estrateca_DiscountCode,
                estrateca_DiscountID = modelo.estrateca_DiscountID,
                estrateca_DiscountAmount = modelo.estrateca_DiscountAmount,
            };
        }

        public static SR_cheqdet ParseSR_cheqdet(ChequeDetalle modelo)
        {
            return new SR_cheqdet
            {
                foliodet = modelo.foliodet,
                movimiento = modelo.movimiento,
                comanda = modelo.comanda,
                cantidad = modelo.cantidad,
                idproducto = modelo.idproducto,
                descuento = modelo.descuento,
                precio = modelo.precio,
                impuesto1 = modelo.impuesto1,
                impuesto2 = modelo.impuesto2,
                impuesto3 = modelo.impuesto3,
                preciosinimpuestos = modelo.preciosinimpuestos,
                tiempo = modelo.tiempo,
                hora = modelo.hora,
                modificador = modelo.modificador,
                mitad = modelo.mitad,
                comentario = modelo.comentario,
                idestacion = modelo.idestacion,
                usuariodescuento = modelo.usuariodescuento,
                comentariodescuento = modelo.comentariodescuento,
                idtipodescuento = modelo.idtipodescuento,
                horaproduccion = modelo.horaproduccion,
                idproductocompuesto = modelo.idproductocompuesto,
                productocompuestoprincipal = modelo.productocompuestoprincipal,
                preciocatalogo = modelo.preciocatalogo,
                marcar = modelo.marcar,
                idmeseroproducto = modelo.idmeseroproducto,
                prioridadproduccion = modelo.prioridadproduccion,
                estatuspatin = modelo.estatuspatin,
                idcortesia = modelo.idcortesia,
                numerotarjeta = modelo.numerotarjeta,
                estadomonitor = modelo.estadomonitor,
                llavemovto = modelo.llavemovto,
                horameserofinalizado = modelo.horameserofinalizado,
                meserofinalizado = modelo.meserofinalizado,
                sistema_envio = modelo.sistema_envio,
                idturno_cierre = modelo.idturno_cierre,
                procesado = modelo.procesado,
                promovolumen = modelo.promovolumen,
                iddispositivo = modelo.iddispositivo,
                productsyncidsr = modelo.productsyncidsr,
                subtotalsrx = modelo.subtotalsrx,
                totalsrx = modelo.totalsrx,
                idlistaprecio = modelo.idlistaprecio,
                tipocambio = modelo.tipocambio,
                idmovtobillar = modelo.idmovtobillar,
                impuestoimporte3 = modelo.impuestoimporte3,
                estrateca_DiscountCode = modelo.estrateca_DiscountCode,
                estrateca_DiscountID = modelo.estrateca_DiscountID,
                estrateca_DiscountAmount = modelo.estrateca_DiscountAmount,
            };
        }

        public static ChequePago ParseChequePago(SR_chequespagos modelo, TipoAccion tipoAccion = TipoAccion.NINGUNO)
        {
            return new ChequePago
            {
                TipoAccion = tipoAccion,
                FolioAnt = modelo.folio,
                IdFormadePagoAnt = modelo.idformadepago,
                ImporteAnt = modelo.importe,
                PropinaAnt = modelo.propina,
                TipodecambioAnt = modelo.tipodecambio,
                ReferenciaAnt = modelo.referencia,

                folio = modelo.folio,
                idformadepago = modelo.idformadepago,
                importe = modelo.importe,
                propina = modelo.propina,
                tipodecambio = modelo.tipodecambio,
                referencia = modelo.referencia,
                idturno_cierre = modelo.idturno_cierre,
                procesado = modelo.procesado,
                sistema_envio = modelo.sistema_envio,
            };
        }

        public static SR_chequespagos ParseSR_chequespagos(ChequePago modelo)
        {
            return new SR_chequespagos
            {
                folio = modelo.folio,
                idformadepago = modelo.idformadepago,
                importe = modelo.importe,
                propina = modelo.propina,
                tipodecambio = modelo.tipodecambio,
                referencia = modelo.referencia,
                idturno_cierre = modelo.idturno_cierre,
                procesado = modelo.procesado,
                sistema_envio = modelo.sistema_envio,
            };
        }

        public static Turno ParseTurno(SR_turnos modelo, TipoAccion tipoAccion)
        {
            return new Turno
            {
                TipoAccion = tipoAccion,
                IdTurnoInternoAnt = modelo.idturnointerno,
                IdTurnoAnt = modelo.idturno,
                EfectivoAnterior = modelo.efectivo,
                TarjetaAnterior = modelo.tarjeta,
                ValesAnterior = modelo.vales,
                CreditoAnterior = modelo.credito,

                idturnointerno = modelo.idturnointerno,
                idturno = modelo.idturno,
                fondo = modelo.fondo,
                apertura = modelo.apertura,
                cierre = modelo.cierre,
                idestacion = modelo.idestacion,
                cajero = modelo.cajero,
                efectivo = modelo.efectivo,
                tarjeta = modelo.tarjeta,
                vales = modelo.vales,
                credito = modelo.credito,
                procesadoweb = modelo.procesadoweb,
                idempresa = modelo.idempresa,
                enviadoacentral = modelo.enviadoacentral,
                fechaenviado = modelo.fechaenviado,
                usuarioenvio = modelo.usuarioenvio,
                offline = modelo.offline,
                enviadoaf = modelo.enviadoaf,
                corte_enviado = modelo.corte_enviado,
                eliminartemporalesencierre = modelo.eliminartemporalesencierre,
                idmesero = modelo.idmesero,
            };
        }

        public static SR_turnos ParseSR_turnos(Turno modelo)
        {
            return new SR_turnos
            {
                idturnointerno = modelo.idturnointerno,
                idturno = modelo.idturno,
                fondo = modelo.fondo,
                apertura = modelo.apertura,
                cierre = modelo.cierre,
                idestacion = modelo.idestacion,
                cajero = modelo.cajero,
                efectivo = modelo.efectivo,
                tarjeta = modelo.tarjeta,
                vales = modelo.vales,
                credito = modelo.credito,
                procesadoweb = modelo.procesadoweb,
                idempresa = modelo.idempresa,
                enviadoacentral = modelo.enviadoacentral,
                fechaenviado = modelo.fechaenviado,
                usuarioenvio = modelo.usuarioenvio,
                offline = modelo.offline,
                enviadoaf = modelo.enviadoaf,
                corte_enviado = modelo.corte_enviado,
                eliminartemporalesencierre = modelo.eliminartemporalesencierre,
                idmesero = modelo.idmesero,
            };
        }
    }
}
